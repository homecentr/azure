name: CI - Pull Request
on:
  pull_request:

jobs:
  deploy_lab:
    name: "Deploy to DEV environment"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    env:
      TF_WORKSPACE: dev
    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}

      - name: Terraform Init
        id: init
        run: yarn run init

      - name: Verify Terraform formatting
        id: fmt
        run: yarn run format:check

      - name: Validate Terraform
        id: validate
        run: yarn run validate

      - name: Apply terraform
        run: yarn run lab:apply

  plan_prod:
    name: "Terraform PR"
    runs-on: ubuntu-latest
    needs: deploy_dev
    permissions:
      contents: read
      packages: read
      pull-requests: write # To allow posting the comment
    env:
      TF_WORKSPACE: "prod"
    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}

      - name: Terraform Init
        id: init
        run: yarn run init

      - name: Terraform Plan
        id: plan
        run: yarn prod:plan
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v5.1.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Initialization \`${{ steps.init.outcome }}\`
            #### Terraform Plan \`${{ steps.plan.outcome }}\`
            #### Terraform Validation \`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Report Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1